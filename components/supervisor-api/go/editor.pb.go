// Code generated by protoc-gen-go. DO NOT EDIT.
// source: editor.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Editor struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Editor) Reset()         { *m = Editor{} }
func (m *Editor) String() string { return proto.CompactTextString(m) }
func (*Editor) ProtoMessage()    {}
func (*Editor) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{0}
}

func (m *Editor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Editor.Unmarshal(m, b)
}
func (m *Editor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Editor.Marshal(b, m, deterministic)
}
func (m *Editor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Editor.Merge(m, src)
}
func (m *Editor) XXX_Size() int {
	return xxx_messageInfo_Editor.Size(m)
}
func (m *Editor) XXX_DiscardUnknown() {
	xxx_messageInfo_Editor.DiscardUnknown(m)
}

var xxx_messageInfo_Editor proto.InternalMessageInfo

func (m *Editor) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Editor) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ListEditorsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEditorsRequest) Reset()         { *m = ListEditorsRequest{} }
func (m *ListEditorsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEditorsRequest) ProtoMessage()    {}
func (*ListEditorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{1}
}

func (m *ListEditorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEditorsRequest.Unmarshal(m, b)
}
func (m *ListEditorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEditorsRequest.Marshal(b, m, deterministic)
}
func (m *ListEditorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEditorsRequest.Merge(m, src)
}
func (m *ListEditorsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEditorsRequest.Size(m)
}
func (m *ListEditorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEditorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEditorsRequest proto.InternalMessageInfo

type ListEditorsResponse struct {
	Editors              []*Editor `protobuf:"bytes,1,rep,name=editors,proto3" json:"editors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListEditorsResponse) Reset()         { *m = ListEditorsResponse{} }
func (m *ListEditorsResponse) String() string { return proto.CompactTextString(m) }
func (*ListEditorsResponse) ProtoMessage()    {}
func (*ListEditorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{2}
}

func (m *ListEditorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEditorsResponse.Unmarshal(m, b)
}
func (m *ListEditorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEditorsResponse.Marshal(b, m, deterministic)
}
func (m *ListEditorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEditorsResponse.Merge(m, src)
}
func (m *ListEditorsResponse) XXX_Size() int {
	return xxx_messageInfo_ListEditorsResponse.Size(m)
}
func (m *ListEditorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEditorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEditorsResponse proto.InternalMessageInfo

func (m *ListEditorsResponse) GetEditors() []*Editor {
	if m != nil {
		return m.Editors
	}
	return nil
}

type OpenEditorRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenEditorRequest) Reset()         { *m = OpenEditorRequest{} }
func (m *OpenEditorRequest) String() string { return proto.CompactTextString(m) }
func (*OpenEditorRequest) ProtoMessage()    {}
func (*OpenEditorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{3}
}

func (m *OpenEditorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenEditorRequest.Unmarshal(m, b)
}
func (m *OpenEditorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenEditorRequest.Marshal(b, m, deterministic)
}
func (m *OpenEditorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenEditorRequest.Merge(m, src)
}
func (m *OpenEditorRequest) XXX_Size() int {
	return xxx_messageInfo_OpenEditorRequest.Size(m)
}
func (m *OpenEditorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenEditorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenEditorRequest proto.InternalMessageInfo

func (m *OpenEditorRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type OpenEditorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenEditorResponse) Reset()         { *m = OpenEditorResponse{} }
func (m *OpenEditorResponse) String() string { return proto.CompactTextString(m) }
func (*OpenEditorResponse) ProtoMessage()    {}
func (*OpenEditorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{4}
}

func (m *OpenEditorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenEditorResponse.Unmarshal(m, b)
}
func (m *OpenEditorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenEditorResponse.Marshal(b, m, deterministic)
}
func (m *OpenEditorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenEditorResponse.Merge(m, src)
}
func (m *OpenEditorResponse) XXX_Size() int {
	return xxx_messageInfo_OpenEditorResponse.Size(m)
}
func (m *OpenEditorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenEditorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenEditorResponse proto.InternalMessageInfo

type CloseEditorRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseEditorRequest) Reset()         { *m = CloseEditorRequest{} }
func (m *CloseEditorRequest) String() string { return proto.CompactTextString(m) }
func (*CloseEditorRequest) ProtoMessage()    {}
func (*CloseEditorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{5}
}

func (m *CloseEditorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseEditorRequest.Unmarshal(m, b)
}
func (m *CloseEditorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseEditorRequest.Marshal(b, m, deterministic)
}
func (m *CloseEditorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseEditorRequest.Merge(m, src)
}
func (m *CloseEditorRequest) XXX_Size() int {
	return xxx_messageInfo_CloseEditorRequest.Size(m)
}
func (m *CloseEditorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseEditorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseEditorRequest proto.InternalMessageInfo

func (m *CloseEditorRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type CloseEditorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseEditorResponse) Reset()         { *m = CloseEditorResponse{} }
func (m *CloseEditorResponse) String() string { return proto.CompactTextString(m) }
func (*CloseEditorResponse) ProtoMessage()    {}
func (*CloseEditorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{6}
}

func (m *CloseEditorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseEditorResponse.Unmarshal(m, b)
}
func (m *CloseEditorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseEditorResponse.Marshal(b, m, deterministic)
}
func (m *CloseEditorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseEditorResponse.Merge(m, src)
}
func (m *CloseEditorResponse) XXX_Size() int {
	return xxx_messageInfo_CloseEditorResponse.Size(m)
}
func (m *CloseEditorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseEditorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseEditorResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Editor)(nil), "supervisor.Editor")
	proto.RegisterType((*ListEditorsRequest)(nil), "supervisor.ListEditorsRequest")
	proto.RegisterType((*ListEditorsResponse)(nil), "supervisor.ListEditorsResponse")
	proto.RegisterType((*OpenEditorRequest)(nil), "supervisor.OpenEditorRequest")
	proto.RegisterType((*OpenEditorResponse)(nil), "supervisor.OpenEditorResponse")
	proto.RegisterType((*CloseEditorRequest)(nil), "supervisor.CloseEditorRequest")
	proto.RegisterType((*CloseEditorResponse)(nil), "supervisor.CloseEditorResponse")
}

func init() {
	proto.RegisterFile("editor.proto", fileDescriptor_7d780504008e31fd)
}

var fileDescriptor_7d780504008e31fd = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x1b, 0x9b, 0x54, 0x1d, 0xf5, 0xe0, 0xb4, 0x42, 0x08, 0x58, 0xcb, 0x5e, 0xcc, 0x41,
	0x72, 0xa8, 0x37, 0x8f, 0x16, 0x11, 0x45, 0x10, 0xe2, 0xcd, 0x5b, 0xd4, 0x11, 0x17, 0x62, 0x76,
	0xcd, 0x6c, 0xfd, 0xdb, 0xfe, 0x05, 0xc9, 0x6e, 0xac, 0x59, 0x62, 0xf0, 0x96, 0x99, 0xf7, 0xe6,
	0xe5, 0x7b, 0xb0, 0xb0, 0x4f, 0x2f, 0xd2, 0xa8, 0x3a, 0xd3, 0xb5, 0x32, 0x0a, 0x81, 0xd7, 0x9a,
	0xea, 0x4f, 0xc9, 0xaa, 0x16, 0x17, 0x30, 0xb9, 0xb2, 0x1a, 0xce, 0x20, 0x32, 0xd2, 0x94, 0x14,
	0x07, 0x8b, 0x20, 0xdd, 0xcd, 0xdd, 0x80, 0x09, 0xec, 0xbc, 0xca, 0x92, 0xaa, 0xe2, 0x9d, 0xe2,
	0x2d, 0x2b, 0x6c, 0x66, 0x31, 0x03, 0xbc, 0x93, 0x6c, 0xdc, 0x3d, 0xe7, 0xf4, 0xb1, 0x26, 0x36,
	0x62, 0x05, 0x53, 0x6f, 0xcb, 0x5a, 0x55, 0x4c, 0x78, 0x06, 0xdb, 0x0e, 0x82, 0xe3, 0x60, 0x31,
	0x4e, 0xf7, 0x96, 0x98, 0xfd, 0x62, 0x64, 0xce, 0x9d, 0xff, 0x58, 0xc4, 0x29, 0x1c, 0xde, 0x6b,
	0xaa, 0xda, 0xb5, 0x4b, 0x46, 0x84, 0x50, 0x17, 0xe6, 0xad, 0x05, 0xb4, 0xdf, 0x0d, 0x43, 0xd7,
	0xe8, 0x7e, 0x26, 0x52, 0xc0, 0x55, 0xa9, 0x98, 0xfe, 0xbf, 0x3f, 0x82, 0xa9, 0xe7, 0x74, 0x01,
	0xcb, 0xaf, 0x00, 0x0e, 0xdc, 0xea, 0xa1, 0x41, 0x7c, 0x26, 0xbc, 0x81, 0xb0, 0xa9, 0x85, 0xf3,
	0x2e, 0x76, 0xbf, 0x7e, 0x72, 0x32, 0xa8, 0xb7, 0x6c, 0x23, 0xbc, 0x86, 0xb0, 0x61, 0xc6, 0xe3,
	0xae, 0xb5, 0x57, 0x37, 0x99, 0x0f, 0xc9, 0x9b, 0xa0, 0x5b, 0x88, 0x2c, 0xbc, 0x0f, 0xd5, 0x6f,
	0xee, 0x43, 0xfd, 0xd1, 0x57, 0x8c, 0x2e, 0xa3, 0xc7, 0x71, 0xa1, 0xe5, 0xd3, 0xc4, 0x3e, 0x91,
	0xf3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec, 0x6f, 0x31, 0x78, 0x32, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EditorServiceClient is the client API for EditorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EditorServiceClient interface {
	List(ctx context.Context, in *ListEditorsRequest, opts ...grpc.CallOption) (*ListEditorsResponse, error)
	Open(ctx context.Context, in *OpenEditorRequest, opts ...grpc.CallOption) (*OpenEditorResponse, error)
	Close(ctx context.Context, in *CloseEditorRequest, opts ...grpc.CallOption) (*CloseEditorResponse, error)
}

type editorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEditorServiceClient(cc grpc.ClientConnInterface) EditorServiceClient {
	return &editorServiceClient{cc}
}

func (c *editorServiceClient) List(ctx context.Context, in *ListEditorsRequest, opts ...grpc.CallOption) (*ListEditorsResponse, error) {
	out := new(ListEditorsResponse)
	err := c.cc.Invoke(ctx, "/supervisor.EditorService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *editorServiceClient) Open(ctx context.Context, in *OpenEditorRequest, opts ...grpc.CallOption) (*OpenEditorResponse, error) {
	out := new(OpenEditorResponse)
	err := c.cc.Invoke(ctx, "/supervisor.EditorService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *editorServiceClient) Close(ctx context.Context, in *CloseEditorRequest, opts ...grpc.CallOption) (*CloseEditorResponse, error) {
	out := new(CloseEditorResponse)
	err := c.cc.Invoke(ctx, "/supervisor.EditorService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EditorServiceServer is the server API for EditorService service.
type EditorServiceServer interface {
	List(context.Context, *ListEditorsRequest) (*ListEditorsResponse, error)
	Open(context.Context, *OpenEditorRequest) (*OpenEditorResponse, error)
	Close(context.Context, *CloseEditorRequest) (*CloseEditorResponse, error)
}

// UnimplementedEditorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEditorServiceServer struct {
}

func (*UnimplementedEditorServiceServer) List(ctx context.Context, req *ListEditorsRequest) (*ListEditorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedEditorServiceServer) Open(ctx context.Context, req *OpenEditorRequest) (*OpenEditorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedEditorServiceServer) Close(ctx context.Context, req *CloseEditorRequest) (*CloseEditorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}

func RegisterEditorServiceServer(s *grpc.Server, srv EditorServiceServer) {
	s.RegisterService(&_EditorService_serviceDesc, srv)
}

func _EditorService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEditorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.EditorService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorServiceServer).List(ctx, req.(*ListEditorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EditorService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenEditorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.EditorService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorServiceServer).Open(ctx, req.(*OpenEditorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EditorService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseEditorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.EditorService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorServiceServer).Close(ctx, req.(*CloseEditorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EditorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supervisor.EditorService",
	HandlerType: (*EditorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _EditorService_List_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _EditorService_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _EditorService_Close_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "editor.proto",
}
