version: 0.5.0
hostname: localhost
ingressMode: hosts
imagePrefix: eu.gcr.io/gitpod-io/self-hosted/
installation:
  stage: production
  tenant: gitpod
  region: local
  cluster: "00"
  shortname: ""
license: ""
certificatesSecret: {}
installPodSecurityPolicies: true
imagePullPolicy: Always
resources:
  default:
    cpu: 100m
    memory: 200Mi
workspaceSizing:
  requests:
    cpu: 1m
    memory: 2.25Gi
    storage: 5Gi
  limits:
    cpu: "5"
    memory: 12Gi
db:
  host: db
  port: 3306
  password: test
messagebus:
  username: override-me
  password: override-me
  secretName: messagebus-certificates-secret-core
defaults:
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
dbEncryptionKeys:
  secretName: null
  file: secrets/encryption-key.json
serviceWaiter:
  imageName: service-waiter
tracing: {}
authProviders:
- id: Public-GitHub
  host: github.com
  type: GitHub
  oauth:
    clientId: CLIENT_ID
    clientSecret: SECRET
    callBackUrl: https://gitpod.io/auth/github/callback
    settingsUrl: https://github.com/settings/connections/applications/CLIENT_ID
  description: ""
  icon: ""
- id: Public-GitLab
  host: gitlab.com
  type: GitLab
  oauth:
    clientId: CLIENT_ID
    clientSecret: SECRET
    callBackUrl: https://gitpod.io/auth/gitlab/callback
    settingsUrl: https://gitlab.com/profile/applications
  description: ""
  icon: ""
branding:
  logo: /images/gitpod-ddd.svg
  homepage: https://www.gitpod.io/
  links:
    header:
    - name: Workspaces
      url: /workspaces/
    - name: Docs
      url: https://www.gitpod.io/docs/
    - name: Blog
      url: https://www.gitpod.io/blog/
    - name: Community
      url: https://community.gitpod.io/
    footer:
    - name: Docs
      url: https://www.gitpod.io/docs/
    - name: Blog
      url: https://www.gitpod.io/blog/
    - name: Status
      url: https://status.gitpod.io/
    social:
    - type: GitHub
      url: https://github.com/gitpod-io/gitpod
    - type: Discourse
      url: https://community.gitpod.io/
    - type: Twitter
      url: https://twitter.com/gitpod
    legal:
    - name: Imprint
      url: https://www.gitpod.io/imprint/
    - name: Privacy Policy
      url: https://www.gitpod.io/privacy/
    - name: Terms of Service
      url: https://www.gitpod.io/terms/
workspaceScheduler: workspace-scheduler
serverProxyApiKey: fF7+aCPvF9Pa0AEjmoZ+yWVh6PqBjM5VEA0wyQs3FH4=
components:
  nodeDaemon:
    name: node-daemon
    theiaHostBasePath: /var/gitpod
  dbMigrations:
    enabled: true
    name: db-migrations
  db:
    name: db
    autoMigrate: true
    gcloudSqlProxy:
      enabled: false
      instance: not-set
      credentials: not-set
    serviceType: ClusterIP
  dashboard:
    name: dashboard
    dependsOn:
    - dashboard-configmap.yaml
    resources:
      cpu: 100m
      memory: 32Mi
    ports:
      http:
        expose: true
        containerPort: 80
        servicePort: 3001
    config: null
    serviceType: ClusterIP
  imageBuilder:
    name: image-builder
    dependsOn:
    - image-builder-configmap.yaml
    hostDindData: /var/gitpod/docker
    registry:
      name: builtin
      secretName: builtin-registry-auth
      path: ""
      baseImageName: ""
      workspaceImageName: ""
    registryCerts:
    - name: builtin
      secret: builtin-registry-certs
    dindImage: docker:18.06-dind
    dindResources:
      requests:
        cpu: 100m
        memory: 128Mi
    ports:
      rpc:
        expose: true
        containerPort: 8080
      metrics:
        expose: false
        containerPort: 9500
  registryFacade:
    name: registry-facade
    disabled: false
    dependsOn:
    - registry-facade-configmap.yaml
    certificatesSecret: {}
    resources:
      cpu: 100m
      memory: 32Mi
    ports:
      registry:
        expose: true
        containerPort: 32223
        servicePort: 3000
    blobserve:
      name: blobserve
      disabled: false
      ports:
        service:
          expose: true
          containerPort: 32224
          servicePort: 4000
    serviceType: ClusterIP
  server:
    name: server
    replicas: 1
    dependsOn:
    - server-proxy-apikey-secret.yaml
    - auth-providers-configmap.yaml
    sessionSecret: Important!Really-Change-This-Key!
    resources:
      cpu: 200m
    github:
      app: {}
    blockNewUsers: false
    runDbDeleter: true
    storage: {}
    wsman: []
    defaultBaseImageRegistryWhitelist: []
    ports:
      http:
        expose: true
        containerPort: 3000
        servicePort: 3000
      metrics:
        expose: true
        containerPort: 9500
      debug:
        expose: false
        containerPort: 9229
    serviceSessionAffinity: None
    serverContainer:
      volumeMounts: null
      env: null
    volumes: null
    garbageCollection:
      disabled: "false"
  workspace:
    ports:
      http:
        containerPort: 23000
        supervisorPort: 22999
    defaultImage:
      imagePrefix: gitpod/
      imageName: workspace-full
      version: latest
    theiaImage:
      imageName: theia-ide
    pullSecret:
      secretName: builtin-registry-auth
    template:
      default:
        spec:
          dnsConfig: null
          nameservers:
          - 1.1.1.1
          - 8.8.8.8
          dnsPolicy: None
  messagebus:
    name: messagebus
    resources:
      cpu: 100m
      memory: 128Mi
    ports:
      amqp:
        expose: true
        containerPort: 5672
      epmd:
        expose: true
        containerPort: 4369
      ui:
        expose: true
        containerPort: 15672
      dist:
        expose: true
        containerPort: 25672
  proxy:
    name: proxy
    svcName: proxy
    replicas: 1
    dependsOn:
    - proxy-configmap-nginx.yaml
    - server-proxy-apikey-secret.yaml
    ports:
      http:
        expose: true
        containerPort: 80
        nodePort: 31080
      https:
        expose: true
        containerPort: 443
        nodePort: 31443
    loadBalancerIP: null
    serviceType: LoadBalancer
    serviceSessionAffinity: None
    serviceExternalTrafficPolicy: null
    deployIngressService: true
    certbot:
      enabled: false
      email: certificate@your-domain.com
  theiaServer:
    name: theia-server
    replicas: 1
    resources:
      cpu: 100m
      memory: 16Mi
    ports:
      http:
        expose: true
        servicePort: 80
        containerPort: 3000
    serviceType: ClusterIP
  wsManager:
    name: ws-manager
    resources:
      cpu: 100m
      memory: 32Mi
    ports:
      rpc:
        expose: true
        containerPort: 8080
      metrics:
        expose: false
        containerPort: 9500
  wsManagerBridge:
    name: ws-manager-bridge
    defaultConfig: true
    resources:
      cpu: 100m
      memory: 64Mi
    ports:
      metrics:
        expose: false
        containerPort: 9500
  wsManagerNode:
    name: ws-manager-node
    registryProxyPort: 8081
    resources:
      cpu: 100m
      memory: 32Mi
  wsSync:
    name: ws-sync
    hostWorkspaceArea: /var/gitpod/workspaces
    servicePort: 8080
    workspaceSizeLimit: ""
    fullWorkspaceBackup:
      enabled: true
      nodeRoots:
      - /var/lib
      runtime: containerd
      containerd:
        socket: /run/containerd/containerd.sock
    remoteStorage:
      kind: minio
      minio:
        endpoint: minio:9000
        accessKey: EXAMPLEvalue
        secretKey: Someone.Should/ReallyChangeThisKey!!
        tmpdir: /tmp
        region: local
  wsScheduler:
    name: ws-scheduler
    disabled: false
    resources:
      cpu: 100m
      memory: 32Mi
    schedulerName: workspace-scheduler
    scalerDisabled: true
    scalerConfig:
      scalingPeriod: 60s
      bufferRuntime: 5s
      slotFactor: 6
      bufferFactor: 1
  cerc:
    name: cerc
    disabled: true
    resources:
      cpu: 100m
      memory: 32Mi
    dependsOn:
    - cerc-configmap.yaml
    ports:
      http:
        expose: true
        containerPort: 8080
        servicePort: 80
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    config:
      selftest:
        period: 10s
      serverHealth:
        period: 1m
      workspaceHealth:
        period: 1m
      workspaceProbe:
        period: 5m
  wsProxy:
    name: ws-proxy
    disabled: true
    resources:
      cpu: 100m
      memory: 64Mi
    replicas: 1
    useHTTPS: false
    ports:
      httpProxy:
        expose: true
        containerPort: 8080
      metrics:
        expose: false
        containerPort: 9500
docker-registry:
  enabled: true
  fullnameOverride: registry
  service:
    port: 443
  tlsSecretName: builtin-registry-certs
minio:
  enabled: true
  fullnameOverride: minio
  accessKey: EXAMPLEvalue
  secretKey: Someone.Should/ReallyChangeThisKey!!
  serviceAccount:
    create: true
    name: minio
mysql:
  enabled: true
  fullnameOverride: mysql
  testFramework:
    enabled: false
  existingSecret: db-password
  serviceAccount:
    name: db
  extraVolumes: |
    - name: init-scripts
      configMap:
        name: db-init-scripts
  extraVolumeMounts: |
    - mountPath: /docker-entrypoint-initdb.d
      name: init-scripts
